Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
                              ./src/anzeigeboard.o (__udivmodqi4)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                              ./src/anzeigeboard.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              ./src/i2c.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

enabled             0x1               ./src/pwm.o
i2c_rx_buf          0x4               ./src/i2c.o
pwm_mask            0x1               ./src/pwm.o
i2c_tx_buf          0x4               ./src/i2c.o
pwm_t_on            0x2               ./src/pwm.o
pwm_t_off           0x2               ./src/pwm.o

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .text          0x0000000000000000        0x0 ./src/anzeigeboard.o
 .bss           0x0000000000000000        0x0 ./src/anzeigeboard.o
 .text.anzeige_convert
                0x0000000000000000       0x14 ./src/anzeigeboard.o
 .text.anzeige_write
                0x0000000000000000       0x2a ./src/anzeigeboard.o
 .text.anzeige_write_direct
                0x0000000000000000       0x5a ./src/anzeigeboard.o
 .text          0x0000000000000000        0x0 ./src/i2c.o
 .bss           0x0000000000000000        0x0 ./src/i2c.o
 .text.i2c_get_status
                0x0000000000000000        0x6 ./src/i2c.o
 .text.i2c_busy
                0x0000000000000000        0x6 ./src/i2c.o
 .text.i2c_slave_start_rx
                0x0000000000000000       0x16 ./src/i2c.o
 .text          0x0000000000000000        0x0 ./src/interrupt.o
 .bss           0x0000000000000000        0x0 ./src/interrupt.o
 .text          0x0000000000000000        0x0 ./src/main.o
 .bss           0x0000000000000000        0x0 ./src/main.o
 .text          0x0000000000000000        0x0 ./src/pwm.o
 .bss           0x0000000000000000        0x0 ./src/pwm.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000000000000000       0x18 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
LOAD ./src/anzeigeboard.o
LOAD ./src/i2c.o
LOAD ./src/interrupt.o
LOAD ./src/main.o
LOAD ./src/pwm.o
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x47c
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_11
                0x000000000000005c                __vector_13
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_2
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
                0x000000000000005e                . = ALIGN (0x2)
 *(.text.*)
 .text.anzeige_init
                0x000000000000005e        0x6 ./src/anzeigeboard.o
                0x000000000000005e                anzeige_init
 .text.anzeige_write_convert
                0x0000000000000064       0x1c ./src/anzeigeboard.o
                0x0000000000000064                anzeige_write_convert
 .text.i2c_init
                0x0000000000000080       0x32 ./src/i2c.o
                0x0000000000000080                i2c_init
 .text.i2c_get_status_register
                0x00000000000000b2        0x6 ./src/i2c.o
                0x00000000000000b2                i2c_get_status_register
 .text.i2c_wait_busy
                0x00000000000000b8        0xc ./src/i2c.o
                0x00000000000000b8                i2c_wait_busy
 .text.i2c_slave_start_tx_data
                0x00000000000000c4       0x36 ./src/i2c.o
                0x00000000000000c4                i2c_slave_start_tx_data
 .text.i2c_get_data
                0x00000000000000fa       0x4a ./src/i2c.o
                0x00000000000000fa                i2c_get_data
 .text.__vector_17
                0x0000000000000144      0x13c ./src/interrupt.o
                0x0000000000000144                __vector_17
 .text.__vector_6
                0x0000000000000280       0x68 ./src/interrupt.o
                0x0000000000000280                __vector_6
 .text.startup.main
                0x00000000000002e8      0x126 ./src/main.o
                0x00000000000002e8                main
 .text.pwm_init
                0x000000000000040e       0x1a ./src/pwm.o
                0x000000000000040e                pwm_init
 .text.pwm_enable
                0x0000000000000428       0x28 ./src/pwm.o
                0x0000000000000428                pwm_enable
 .text.pwm_update_port1
                0x0000000000000450       0x10 ./src/pwm.o
                0x0000000000000450                pwm_update_port1
 .text.pwm_set_timing
                0x0000000000000460       0x18 ./src/pwm.o
                0x0000000000000460                pwm_set_timing
                0x0000000000000478                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000478        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x0000000000000478                exit
                0x0000000000000478                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000478        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000047c                _etext = .

.data           0x0000000000800060       0xfc load address 0x000000000000047c
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./src/anzeigeboard.o
 .data          0x0000000000800060        0x0 ./src/i2c.o
 .data          0x0000000000800060        0x0 ./src/interrupt.o
 .data          0x0000000000800060        0x0 ./src/main.o
 .data          0x0000000000800060        0x0 ./src/pwm.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 .data.i2c_status
                0x0000000000800060        0x1 ./src/i2c.o
                0x0000000000800060                i2c_status
 *(.rodata)
 *(.rodata*)
 .rodata.CSWTCH.9
                0x0000000000800061       0xfb ./src/anzeigeboard.o
 *(.gnu.linkonce.d*)
                0x000000000080015c                . = ALIGN (0x2)
                0x000000000080015c                _edata = .
                0x000000000080015c                PROVIDE (__data_end, .)

.bss            0x000000000080015c       0x13
                0x000000000080015c                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.i2c_status_register
                0x000000000080015c        0x1 ./src/i2c.o
                0x000000000080015c                i2c_status_register
 .bss.i2c_msg_size
                0x000000000080015d        0x1 ./src/i2c.o
                0x000000000080015d                i2c_msg_size
 .bss.outputs_enabled.1570
                0x000000000080015e        0x1 ./src/interrupt.o
 .bss.i2c_rx_buf_ptr.1547
                0x000000000080015f        0x1 ./src/interrupt.o
 .bss.i2c_tx_buf_ptr.1546
                0x0000000000800160        0x1 ./src/interrupt.o
 *(COMMON)
 COMMON         0x0000000000800161        0x8 ./src/i2c.o
                0x0000000000800161                i2c_rx_buf
                0x0000000000800165                i2c_tx_buf
 COMMON         0x0000000000800169        0x6 ./src/pwm.o
                0x0000000000800169                enabled
                0x000000000080016a                pwm_mask
                0x000000000080016b                pwm_t_on
                0x000000000080016d                pwm_t_off
                0x000000000080016f                PROVIDE (__bss_end, .)
                0x000000000000047c                __data_load_start = LOADADDR (.data)
                0x0000000000000578                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080016f        0x0
                0x000000000080016f                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080016f                PROVIDE (__noinit_end, .)
                0x000000000080016f                _end = .
                0x000000000080016f                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./src/anzeigeboard.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./src/i2c.o
 .comment       0x0000000000000000       0x12 ./src/interrupt.o
 .comment       0x0000000000000000       0x12 ./src/main.o
 .comment       0x0000000000000000       0x12 ./src/pwm.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(rgn_scoreboard_atmega8_i2c.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                                                  ./src/pwm.o
                                                  ./src/interrupt.o
                                                  ./src/i2c.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                                                  ./src/i2c.o
                                                  ./src/anzeigeboard.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__udivmodqi4                                      /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodqi4.o)
                                                  ./src/anzeigeboard.o
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_17                                       ./src/interrupt.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_6                                        ./src/interrupt.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
_exit                                             /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
anzeige_convert                                   ./src/anzeigeboard.o
anzeige_init                                      ./src/anzeigeboard.o
                                                  ./src/main.o
anzeige_write                                     ./src/anzeigeboard.o
anzeige_write_convert                             ./src/anzeigeboard.o
                                                  ./src/main.o
anzeige_write_direct                              ./src/anzeigeboard.o
enabled                                           ./src/pwm.o
exit                                              /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
i2c_busy                                          ./src/i2c.o
i2c_get_data                                      ./src/i2c.o
                                                  ./src/main.o
i2c_get_status                                    ./src/i2c.o
i2c_get_status_register                           ./src/i2c.o
                                                  ./src/main.o
i2c_init                                          ./src/i2c.o
                                                  ./src/main.o
i2c_msg_size                                      ./src/i2c.o
                                                  ./src/interrupt.o
i2c_rx_buf                                        ./src/interrupt.o
                                                  ./src/i2c.o
i2c_slave_start_rx                                ./src/i2c.o
i2c_slave_start_tx_data                           ./src/i2c.o
                                                  ./src/main.o
i2c_status                                        ./src/i2c.o
                                                  ./src/interrupt.o
i2c_status_register                               ./src/i2c.o
                                                  ./src/interrupt.o
i2c_tx_buf                                        ./src/interrupt.o
                                                  ./src/i2c.o
i2c_wait_busy                                     ./src/i2c.o
                                                  ./src/main.o
main                                              ./src/main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm8.o
pwm_enable                                        ./src/pwm.o
                                                  ./src/main.o
pwm_init                                          ./src/pwm.o
                                                  ./src/main.o
pwm_mask                                          ./src/pwm.o
                                                  ./src/interrupt.o
pwm_set_timing                                    ./src/pwm.o
                                                  ./src/main.o
pwm_t_off                                         ./src/pwm.o
                                                  ./src/interrupt.o
pwm_t_on                                          ./src/pwm.o
                                                  ./src/interrupt.o
pwm_update_port1                                  ./src/pwm.o
                                                  ./src/anzeigeboard.o
