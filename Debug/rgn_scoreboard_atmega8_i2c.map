Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                              ./src/interrupt.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

enabled             0x1               ./src/pwm.o
pwm_t_total8        0x1               ./src/pwm.o
pwm_t_total16       0x2               ./src/pwm.o
pwm_t_on_r          0x1               ./src/pwm.o
pwm_t_on_g          0x2               ./src/pwm.o
pwm_t_on_b          0x2               ./src/pwm.o

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 .text          0x0000000000000000        0x0 ./src/interrupt.o
 .bss           0x0000000000000000        0x0 ./src/interrupt.o
 .text          0x0000000000000000        0x0 ./src/main.o
 .bss           0x0000000000000000        0x0 ./src/main.o
 .text          0x0000000000000000        0x0 ./src/pwm.o
 .bss           0x0000000000000000        0x0 ./src/pwm.o
 .text.pwm_set_timing_g
                0x0000000000000000       0x3e ./src/pwm.o
 .text.pwm_set_timing_b
                0x0000000000000000       0x3e ./src/pwm.o
 .text.pwm_set_timing_r
                0x0000000000000000       0x22 ./src/pwm.o
 .text.pwm_set_timing_8
                0x0000000000000000       0x24 ./src/pwm.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
LOAD ./src/interrupt.o
LOAD ./src/main.o
LOAD ./src/pwm.o
LOAD /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x2b2
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x10 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000032                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000042        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000000000000046        0x2 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
                0x0000000000000046                __vector_1
                0x0000000000000046                __vector_12
                0x0000000000000046                __bad_interrupt
                0x0000000000000046                __vector_3
                0x0000000000000046                __vector_11
                0x0000000000000046                __vector_13
                0x0000000000000046                __vector_17
                0x0000000000000046                __vector_5
                0x0000000000000046                __vector_4
                0x0000000000000046                __vector_9
                0x0000000000000046                __vector_2
                0x0000000000000046                __vector_15
                0x0000000000000046                __vector_8
                0x0000000000000046                __vector_14
                0x0000000000000046                __vector_10
                0x0000000000000046                __vector_16
                0x0000000000000046                __vector_18
                0x0000000000000048                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_6
                0x0000000000000048       0x94 ./src/interrupt.o
                0x0000000000000048                __vector_6
 .text.__vector_7
                0x00000000000000dc       0x94 ./src/interrupt.o
                0x00000000000000dc                __vector_7
 .text.main     0x0000000000000170       0x30 ./src/main.o
                0x0000000000000170                main
 .text.pwm_init
                0x00000000000001a0       0x2e ./src/pwm.o
                0x00000000000001a0                pwm_init
 .text.pwm_enable
                0x00000000000001ce       0x80 ./src/pwm.o
                0x00000000000001ce                pwm_enable
 .text.pwm_set_timing_16
                0x000000000000024e       0x60 ./src/pwm.o
                0x000000000000024e                pwm_set_timing_16
                0x00000000000002ae                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000002ae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                0x00000000000002ae                exit
                0x00000000000002ae                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000002ae        0x4 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000002b2                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000002b2
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 ./src/interrupt.o
 .data          0x0000000000800060        0x0 ./src/main.o
 .data          0x0000000000800060        0x0 ./src/pwm.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0xb
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.output_enabled.1521
                0x0000000000800060        0x1 ./src/interrupt.o
 .bss.output_enabled.1527
                0x0000000000800061        0x1 ./src/interrupt.o
 *(COMMON)
 COMMON         0x0000000000800062        0x9 ./src/pwm.o
                0x0000000000800062                enabled
                0x0000000000800063                pwm_t_total8
                0x0000000000800064                pwm_t_total16
                0x0000000000800066                pwm_t_on_r
                0x0000000000800067                pwm_t_on_g
                0x0000000000800069                pwm_t_on_b
                0x000000000080006b                PROVIDE (__bss_end, .)
                0x00000000000002b2                __data_load_start = LOADADDR (.data)
                0x00000000000002b2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080006b        0x0
                0x000000000080006b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080006b                PROVIDE (__noinit_end, .)
                0x000000000080006b                _end = .
                0x000000000080006b                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xcf0
 *(.stab)
 .stab          0x0000000000000000      0x570 ./src/interrupt.o
 .stab          0x0000000000000570      0x354 ./src/main.o
                                        0x510 (size before relaxing)
 .stab          0x00000000000008c4      0x42c ./src/pwm.o
                                        0x7e0 (size before relaxing)

.stabstr        0x0000000000000000      0xd8a
 *(.stabstr)
 .stabstr       0x0000000000000000      0xd8a ./src/interrupt.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./src/interrupt.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 ./src/main.o
 .comment       0x0000000000000000       0x12 ./src/pwm.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(rgn_scoreboard_atmega8_i2c.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__bss_end                                         /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                                                  ./src/pwm.o
                                                  ./src/interrupt.o
__heap_end                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__init                                            /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__stack                                           /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_1                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_10                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_11                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_12                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_13                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_14                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_15                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_16                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_17                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_18                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_2                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_3                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_4                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_5                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_6                                        ./src/interrupt.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_7                                        ./src/interrupt.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_8                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_9                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vector_default                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
__vectors                                         /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
_exit                                             /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
enabled                                           ./src/pwm.o
exit                                              /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
main                                              ./src/main.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm8.o
pwm_enable                                        ./src/pwm.o
                                                  ./src/main.o
pwm_init                                          ./src/pwm.o
                                                  ./src/main.o
pwm_set_timing_16                                 ./src/pwm.o
pwm_set_timing_8                                  ./src/pwm.o
pwm_set_timing_b                                  ./src/pwm.o
pwm_set_timing_g                                  ./src/pwm.o
pwm_set_timing_r                                  ./src/pwm.o
pwm_t_on_b                                        ./src/pwm.o
                                                  ./src/interrupt.o
pwm_t_on_g                                        ./src/pwm.o
                                                  ./src/interrupt.o
pwm_t_on_r                                        ./src/pwm.o
pwm_t_total16                                     ./src/pwm.o
                                                  ./src/interrupt.o
pwm_t_total8                                      ./src/pwm.o
